{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CryptoTable1 from './CryptoTable1';\nimport Header from './Header';\nimport { green, red } from '@material-ui/core/colors';\n\nfunction daysBetween(from, to) {\n  const timeDifference = to.getTime() - from.getTime();\n  return timeDifference / (1000 * 3600 * 24);\n}\n\nfunction transformCryptos(cryptos) {\n  //const totalMarketCap = cryptos.reduce((total, crypto) => total + crypto.Market_Cap, 0);\n  return cryptos.cryptos.map(crypto => ({\n    high: crypto.High || 0,\n    low: crypto.Low || 0,\n    market_cap: crypto.Market_Cap,\n    currency: crypto.Currency,\n    volume: crypto.Volume || 0\n  })); //current_price: `$${parseFloat((crypto.current_price || 0).toFixed(6))}`,\n  //    market_cap_percentage: `${((crypto.market_cap / totalMarketCap) * 100).toFixed(2)}%`,\n  //price_change_percentage_7d: `${(crypto.price_change_percentage_7d || 0).toFixed(2)}%`,\n}\n\nconst useStyles = makeStyles(theme => ({\n  green: {\n    color: green[500]\n  },\n  red: {\n    color: red[500]\n  }\n}));\n\nconst CryptoList = () => {\n  _s();\n\n  const [cryptos, setCryptos] = useState([]);\n  const [lastFetchDate, setLastFetchDate] = useState(new Date());\n  const [searchTerm, setSearchTerm] = useState('');\n  const classes = useStyles();\n  const columns = useMemo(() => [{\n    Header: 'Currency',\n    accessor: 'Currency',\n    sortType: (a, b, c) => a.values[c].toLowerCase().localeCompare(b.values[c].toLowerCase())\n  }, {\n    Header: 'High',\n    accessor: 'High'\n  }, {\n    Header: 'Low',\n    accessor: 'Low'\n  }, {\n    Header: 'Volume',\n    accessor: 'Volume'\n  }, {\n    Header: 'Market_Cap',\n    accessor: 'Market_Cap'\n  }]);\n\n  const fetchCryptos = async () => {\n    const response = await axios.get('http://localhost:5000/crypto/').then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    const json = await response;\n    setCryptos(transformCryptos(json));\n  };\n\n  useEffect(() => {\n    fetchCryptos();\n    setTimeout(() => setLastFetchDate(new Date()), 60E3);\n  }, [lastFetchDate]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Crypto Prices Dashboard\",\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CryptoTable1, {\n      columns: columns,\n      data: searchTerm ? cryptos.filter(crypto => crypto.currency.toLowerCase().includes(searchTerm.toLowerCase()) || crypto.symbol.includes(searchTerm.toUpperCase())) : cryptos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoList, \"UdgTqtcvut1iO7E+Z35zTmDAJe4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CryptoList;\nexport default CryptoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoList\");","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Fragment","useEffect","useMemo","useState","axios","makeStyles","CryptoTable1","Header","green","red","daysBetween","from","to","timeDifference","getTime","transformCryptos","cryptos","map","crypto","high","High","low","Low","market_cap","Market_Cap","currency","Currency","volume","Volume","useStyles","theme","color","CryptoList","setCryptos","lastFetchDate","setLastFetchDate","Date","searchTerm","setSearchTerm","classes","columns","accessor","sortType","a","b","c","values","toLowerCase","localeCompare","fetchCryptos","response","get","then","console","log","data","catch","error","json","setTimeout","filter","includes","symbol","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CryptoTable1 from './CryptoTable1';\r\nimport Header from './Header';\r\nimport { green, red } from '@material-ui/core/colors';\r\nfunction daysBetween(from, to) {\r\n  const timeDifference = to.getTime() - from.getTime();\r\n  return timeDifference / (1000 * 3600 * 24);\r\n}\r\nfunction transformCryptos(cryptos) {\r\n  //const totalMarketCap = cryptos.reduce((total, crypto) => total + crypto.Market_Cap, 0);\r\n  return cryptos.cryptos.map(crypto => ({\r\n    high: crypto.High || 0,\r\n    low: crypto.Low || 0,\r\n    market_cap: crypto.Market_Cap,\r\n    currency: crypto.Currency,\r\n    volume: crypto.Volume || 0,\r\n\r\n  }));//current_price: `$${parseFloat((crypto.current_price || 0).toFixed(6))}`,\r\n  //    market_cap_percentage: `${((crypto.market_cap / totalMarketCap) * 100).toFixed(2)}%`,\r\n  //price_change_percentage_7d: `${(crypto.price_change_percentage_7d || 0).toFixed(2)}%`,\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  green: {\r\n    color: green[500],\r\n  },\r\n  red: {\r\n    color: red[500],\r\n  },\r\n}));\r\n\r\nconst CryptoList =()=>{\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [lastFetchDate, setLastFetchDate] = useState(new Date());\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const classes = useStyles();\r\n  \r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header:'Currency',\r\n        accessor: 'Currency',\r\n        sortType: (a, b, c) => a.values[c].toLowerCase().localeCompare(b.values[c].toLowerCase()), \r\n        \r\n    },{\r\n        Header:'High',\r\n        accessor: 'High'\r\n\r\n    },{\r\n        Header:'Low',\r\n        accessor: 'Low'\r\n\r\n    },{\r\n        Header:'Volume',\r\n        accessor: 'Volume'\r\n\r\n    },{\r\n        Header:'Market_Cap',\r\n        accessor: 'Market_Cap',\r\n        \r\n    },\r\n    ],\r\n  );\r\n\r\n  \r\n  const fetchCryptos = async () => {\r\n    const response = await axios.get('http://localhost:5000/crypto/')\r\n      .then(response =>{\r\n          console.log(response.data)\r\n      })\r\n      .catch((error)=>{\r\n          console.log(error);\r\n      });\r\n    const json = await response;\r\n    setCryptos(transformCryptos(json));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCryptos();\r\n    setTimeout(() => setLastFetchDate(new Date()), 60E3);\r\n  }, [lastFetchDate])\r\n\r\n\r\n  return(\r\n    <Fragment>\r\n    <Header text=\"Crypto Prices Dashboard\" setSearchTerm={setSearchTerm} />\r\n    <CryptoTable1 columns={columns} data={\r\n      searchTerm\r\n        ? cryptos.filter(crypto => (\r\n          crypto.currency.toLowerCase().includes(searchTerm.toLowerCase())\r\n            || crypto.symbol.includes(searchTerm.toUpperCase())\r\n        ))\r\n        : cryptos\r\n    } />\r\n  </Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default CryptoList;"]},"metadata":{},"sourceType":"module"}