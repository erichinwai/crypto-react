{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\cryptotable.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './columns';\nimport './table.css';\n\nconst BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => props.crypto, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nclass Cryptotable extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*<tr>\r\n          <td>{this.props.crypto.Currency}</td>\r\n          <td>{this.props.crypto.Date}</td>\r\n          <td>{this.props.crypto.Open}</td>\r\n          <td>{this.props.crypto.High}</td>\r\n          <td>{this.props.crypto.Low}</td>\r\n          <td>{this.props.crypto.Volume}</td>\r\n          <td>{this.props.crypto['Market Cap']}</td>\r\n      </tr>\r\n      */\n      _jsxDEV(BasicTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default Cryptotable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/cryptotable.js"],"names":["React","Component","useMemo","useTable","COLUMNS","BasicTable","columns","data","props","crypto","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Cryptotable"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,UAAU,GAAE,MAAK;AAAA;;AACnB,QAAMC,OAAO,GAAGJ,OAAO,CAAC,MAAKE,OAAN,EAAe,EAAf,CAAvB;AACA,QAAMG,IAAI,GAAGL,OAAO,CAAC,MAAKM,KAAK,CAACC,MAAZ,EAAoB,EAApB,CAApB;AACA,QAAMC,aAAa,GAAGP,QAAQ,CAAC;AAC3BG,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAKA,QAAM;AACFI,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFL,aANJ;AAQA,sBACI,sBAAWC,aAAX;AAAA,4BACI;AAAA,gBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBACKD,MAAM,CAACE,MAAP,CAAc,QAAd;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,sBAAWV,iBAAX;AAAA,gBACKE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAQ;AACdR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACKD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAQ;AACnB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBACFD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AADE;AAAA;AAAA;AAAA;AAAA,oBAAP;AAGH,WAJA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAZA;AADL;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA/CD;;GAAMjB,U;UAGoBF,Q;;;KAHpBE,U;;AAiDN,MAAMuB,WAAN,SAA0B3B,SAA1B,CAAmC;AAE/BqB,EAAAA,MAAM,GAAE;AACJ;AAAA;;AACI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,cAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAXJ;AAaH;;AAhB8B;;AAmBnC,eAAeM,WAAf","sourcesContent":["import React, {Component, useMemo} from 'react';\r\nimport {useTable} from 'react-table'\r\nimport {COLUMNS} from './columns'\r\nimport './table.css'\r\n\r\nconst BasicTable =() =>{\r\n    const columns = useMemo(()=> COLUMNS, [])\r\n    const data = useMemo(()=> props.crypto, [])\r\n    const tableInstance = useTable({\r\n        columns, \r\n        data\r\n    })\r\n\r\n    const {\r\n        getTableProps, \r\n        getTableBodyProps, \r\n        headerGroups, \r\n        rows, \r\n        prepareRow\r\n    } = tableInstance\r\n\r\n    return(\r\n        <table {...getTableProps}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup)=>(\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column)=>(\r\n                            <th {...column.getHeaderProps()}>\r\n                                {column.render('Header')}\r\n                            </th>\r\n                    ))} \r\n                    </tr>\r\n                ))}\r\n                \r\n            </thead>\r\n            <tbody {...getTableBodyProps}>\r\n                {rows.map((row) =>{\r\n                    prepareRow(row)\r\n                    return(\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map((cell)=>{\r\n                                return <td {...cell.getCellProps()}>\r\n                                    {cell.render('Cell')}\r\n                                </td>\r\n                            })}\r\n                        </tr>\r\n\r\n                    )\r\n                })} \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nclass Cryptotable extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            /*<tr>\r\n                <td>{this.props.crypto.Currency}</td>\r\n                <td>{this.props.crypto.Date}</td>\r\n                <td>{this.props.crypto.Open}</td>\r\n                <td>{this.props.crypto.High}</td>\r\n                <td>{this.props.crypto.Low}</td>\r\n                <td>{this.props.crypto.Volume}</td>\r\n                <td>{this.props.crypto['Market Cap']}</td>\r\n            </tr>\r\n            */\r\n            <BasicTable/>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Cryptotable;\r\n"]},"metadata":{},"sourceType":"module"}