{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\cryptotable.js\";\nimport React, { Component, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './columns';\nimport './table.css';\n\nclass Cryptotable extends Component {\n  BasicTable() {\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => props.crypto, []);\n    const tableInstance = useTable({\n      columns,\n      data\n    });\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = tableInstance;\n    return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return (\n      /*<tr>\r\n          <td>{this.props.crypto.Currency}</td>\r\n          <td>{this.props.crypto.Date}</td>\r\n          <td>{this.props.crypto.Open}</td>\r\n          <td>{this.props.crypto.High}</td>\r\n          <td>{this.props.crypto.Low}</td>\r\n          <td>{this.props.crypto.Volume}</td>\r\n          <td>{this.props.crypto['Market Cap']}</td>\r\n      </tr>\r\n      */\n      BasicTable()\n    );\n  }\n\n}\n\nexport default Cryptotable;","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/cryptotable.js"],"names":["React","Component","useMemo","useTable","COLUMNS","Cryptotable","BasicTable","columns","data","props","crypto","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,aAAP;;AAIA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAmC;AAC/BK,EAAAA,UAAU,GAAG;AACT,UAAMC,OAAO,GAAGL,OAAO,CAAC,MAAKE,OAAN,EAAe,EAAf,CAAvB;AACA,UAAMI,IAAI,GAAGN,OAAO,CAAC,MAAKO,KAAK,CAACC,MAAZ,EAAoB,EAApB,CAApB;AACA,UAAMC,aAAa,GAAGR,QAAQ,CAAC;AAC3BI,MAAAA,OAD2B;AAE3BC,MAAAA;AAF2B,KAAD,CAA9B;AAKA,UAAM;AACFI,MAAAA,aADE;AAEFC,MAAAA,iBAFE;AAGFC,MAAAA,YAHE;AAIFC,MAAAA,IAJE;AAKFC,MAAAA;AALE,QAMFL,aANJ;AAQA,wBACI,sBAAWC,aAAX;AAAA,8BACI;AAAA,kBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBACKD,MAAM,CAACE,MAAP,CAAc,QAAd;AADL;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,sBAAWV,iBAAX;AAAA,kBACKE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAQ;AACdR,UAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACKD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAQ;AACnB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BACFD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AADE;AAAA;AAAA;AAAA;AAAA,sBAAP;AAGH,aAJA;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAZA;AADL;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AACDA,EAAAA,MAAM,GAAE;AACJ;AACI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYjB,MAAAA,UAAU;AAXd;AAaH;;AA/D8B;;AAkEnC,eAAeD,WAAf","sourcesContent":["import React, {Component, useMemo} from 'react';\r\nimport {useTable} from 'react-table'\r\nimport {COLUMNS} from './columns'\r\nimport './table.css'\r\n\r\n\r\n\r\nclass Cryptotable extends Component{\r\n    BasicTable (){\r\n        const columns = useMemo(()=> COLUMNS, [])\r\n        const data = useMemo(()=> props.crypto, [])\r\n        const tableInstance = useTable({\r\n            columns, \r\n            data\r\n        })\r\n    \r\n        const {\r\n            getTableProps, \r\n            getTableBodyProps, \r\n            headerGroups, \r\n            rows, \r\n            prepareRow\r\n        } = tableInstance\r\n    \r\n        return(\r\n            <table {...getTableProps}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup)=>(\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column)=>(\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                        ))} \r\n                        </tr>\r\n                    ))}\r\n                    \r\n                </thead>\r\n                <tbody {...getTableBodyProps}>\r\n                    {rows.map((row) =>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell)=>{\r\n                                    return <td {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                })}\r\n                            </tr>\r\n    \r\n                        )\r\n                    })} \r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            /*<tr>\r\n                <td>{this.props.crypto.Currency}</td>\r\n                <td>{this.props.crypto.Date}</td>\r\n                <td>{this.props.crypto.Open}</td>\r\n                <td>{this.props.crypto.High}</td>\r\n                <td>{this.props.crypto.Low}</td>\r\n                <td>{this.props.crypto.Volume}</td>\r\n                <td>{this.props.crypto['Market Cap']}</td>\r\n            </tr>\r\n            */\r\n            BasicTable()\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Cryptotable;\r\n"]},"metadata":{},"sourceType":"module"}