{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { useTable } from 'react-table';\nimport Cryptotable from './cryptotable';\nexport default class CryptoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: [],\n      cur: [],\n      test: [],\n      dat: new Date(),\n      high: 0,\n      low: 0,\n      vol: '',\n      mark: '',\n      sortDirection: 'asc',\n      selectedHeaderIndex: 0 //setCryptos:[],\n      //lastFetchDate:new Date(),\n      //setLastFetchDate:new Date(),\n      //searchTerm:'', setSearchTerm:''\n\n    };\n\n    this.ascComparator = (row1, row2) => row1[this.state.selectedHeaderIndex].localeCompare(row2[this.state.selectedHeaderIndex]);\n\n    this.descComparator = (row1, row2) => row2[this.state.selectedHeaderIndex].localeCompare(row1[this.state.selectedHeaderIndex]);\n\n    this.flipSortDirection = () => this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/crypto/').then(response => {\n      const cryptos = response.data;\n      this.setState({\n        cryptos: cryptos //headers: cryptos[0]\n        //cur: cryptos[0], first element\n        //test: cryptos.map(name=>name.currency),\n\n      });\n      console.log(response.data[0]); //return response.data\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  cryptoList() {\n    return this.state.cryptos.map(currentcrypto => {\n      return /*#__PURE__*/_jsxDEV(Cryptotable, {\n        crypto: currentcrypto\n      }, currentcrypto._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  render() {\n    console.log(this.state.headers); //tezos\n    //console.log(this.state.test); //undefined array\n\n    console.log(this.state.cryptos); //486 array\n\n    console.log(this.props.crypto); //undefined\n\n    const {\n      headers,\n      rows\n    } = this.props.table;\n    /*const comparator =\r\n      this.state.sortDirection === \"asc\"\r\n        ? this.ascComparator\r\n        : this.descComparator;\r\n    const sortedRows = rows.sort(comparator);\r\n    */\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crypto Currency Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.cryptoList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst table = {\n  headers: [\"Currency\", \"High\", \"Low\", \"Volumn\", \"Market_Cap\"],\n  rows: this.state.cryptos\n};","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Component","axios","COLUMNS","useTable","Cryptotable","CryptoList","constructor","props","state","cryptos","cur","test","dat","Date","high","low","vol","mark","sortDirection","selectedHeaderIndex","ascComparator","row1","row2","localeCompare","descComparator","flipSortDirection","componentDidMount","get","then","response","data","setState","console","log","catch","error","cryptoList","map","currentcrypto","_id","render","headers","crypto","rows","table"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {COLUMNS} from './columns';\r\nimport './table.css';\r\nimport {useTable} from 'react-table';\r\nimport Cryptotable from './cryptotable';\r\nexport default class CryptoList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cryptos: [],\r\n      cur:[],\r\n      test:[],\r\n      dat: new Date(),\r\n      high:0,\r\n      low:0,\r\n      vol:'',\r\n      mark:'',\r\n      sortDirection:'asc', \r\n      selectedHeaderIndex:0\r\n      \r\n      //setCryptos:[],\r\n      //lastFetchDate:new Date(),\r\n      //setLastFetchDate:new Date(),\r\n      //searchTerm:'', setSearchTerm:''\r\n    };\r\n    this.ascComparator = (row1, row2) =>\r\n      row1[this.state.selectedHeaderIndex].localeCompare(\r\n        row2[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.descComparator = (row1, row2) =>\r\n      row2[this.state.selectedHeaderIndex].localeCompare(\r\n        row1[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.flipSortDirection = () =>\r\n      this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/crypto/')\r\n    .then(response =>{\r\n      const cryptos = response.data;\r\n        this.setState({ cryptos: cryptos, \r\n          //headers: cryptos[0]\r\n        //cur: cryptos[0], first element\r\n        //test: cryptos.map(name=>name.currency),\r\n\r\n\r\n      });\r\n        console.log(response.data[0]);\r\n        //return response.data\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n  }\r\n  \r\n  cryptoList(){\r\n    return this.state.cryptos.map(currentcrypto =>{\r\n        return <Cryptotable crypto={currentcrypto} key={currentcrypto._id}/>;\r\n    })\r\n  }\r\n  \r\n  \r\n  render(){\r\n    console.log(this.state.headers);//tezos\r\n    //console.log(this.state.test); //undefined array\r\n    console.log(this.state.cryptos);//486 array\r\n    console.log(this.props.crypto);//undefined\r\n\r\n    const { headers, rows } = this.props.table;\r\n    /*const comparator =\r\n      this.state.sortDirection === \"asc\"\r\n        ? this.ascComparator\r\n        : this.descComparator;\r\n    const sortedRows = rows.sort(comparator);\r\n*/\r\n\r\n    return(\r\n      <div>\r\n          <h2>Crypto Currency Historial</h2>\r\n          <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n              \r\n              </thead>\r\n              <tbody>\r\n                  {this.cryptoList() }\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  )\r\n    }\r\n  }\r\n\r\n  const table = {\r\n    headers: [\"Currency\", \"High\", \"Low\", \"Volumn\", \"Market_Cap\"],\r\n    rows: this.state.cryptos\r\n  };"]},"metadata":{},"sourceType":"module"}