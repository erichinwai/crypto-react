{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { useTable } from 'react-table';\nimport Cryptotable from './cryptotable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst sortTypes = {\n  up: {\n    class: 'sort-up',\n    fn: (a, b) => a.Market_Cap - b.Market_Cap\n  },\n  down: {\n    class: 'sort-down',\n    fn: (a, b) => b.Market_Cap - a.Market_Cap\n  },\n  default: {\n    class: 'sort',\n    fn: (a, b) => a\n  }\n};\nexport default class CryptoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortChange = () => {\n      const {\n        currentSort\n      } = this.state.currentSort;\n      console.log(this.state.currentSort);\n      let nextSort;\n      if (currentSort === 'down') nextSort = 'up';else if (currentSort === 'up') nextSort = 'default';else if (currentSort === 'default') nextSort = 'down';\n      this.setState({\n        currentSort: nextSort\n      });\n    };\n\n    this.state = {\n      cryptos: [],\n      cur: [],\n      test: [],\n      dat: new Date(),\n      high: 0,\n      low: 0,\n      vol: '',\n      mark: '',\n      sortDirection: 'asc',\n      selectedHeaderIndex: 0,\n      currentSort: 'default' //setCryptos:[],\n      //lastFetchDate:new Date(),\n      //setLastFetchDate:new Date(),\n      //searchTerm:'', setSearchTerm:''\n\n    };\n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n    /*\r\n    this.ascComparator = (row1, row2) =>\r\n      row1[this.state.selectedHeaderIndex].localeCompare(\r\n        row2[this.state.selectedHeaderIndex]\r\n      );\r\n      this.descComparator = (row1, row2) =>\r\n      row2[this.state.selectedHeaderIndex].localeCompare(\r\n        row1[this.state.selectedHeaderIndex]\r\n      );\r\n      this.flipSortDirection = () =>\r\n      this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n      */\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/crypto/').then(response => {\n      const cryptos = response.data;\n      this.setState({\n        cryptos: cryptos,\n        //headers: cryptos[0]\n        //test: cryptos.map(name=>name.currency),\n        cur: cryptos.Currency,\n        dat: new Date(cryptos.Date),\n        high: cryptos.High,\n        low: cryptos.Low,\n        vol: cryptos.Volumn,\n        mark: cryptos.Market_Cap\n      });\n      console.log(response.data[0]); //return response.data\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  cryptoList() {\n    return this.state.cryptos.map(currentcrypto => {\n      return /*#__PURE__*/_jsxDEV(Cryptotable, {\n        crypto: currentcrypto\n      }, currentcrypto._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n\n  sortBy(key) {\n    let arrayCopy = [...this.state.crptos];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({\n      data: arrayCopy\n    });\n  }\n\n  render() {\n    console.log(this.state.cryptos[0]); //tezos\n\n    console.log(this.props.crypto);\n    console.log(this.state.cryptos); //486 array\n\n    console.log(this.state.currentSort);\n    console.log(sortTypes[this.state.currentSort].class);\n    /*const table = {\r\n      headers:[\"Currency\", \"High\", \"Low\", \"Volumn\", \"Market_Cap\"],\r\n      rows:[[this.state.cryptos.cur], \r\n            [this.state.cryptos.high],\r\n            [this.state.cryptos.low],\r\n            [this.state.cryptos.vol],\r\n            [this.state.cryptos.mark],\r\n            ]\r\n    };\r\n    \r\n    const {headers, rows } = table;\r\n    \r\n    const comparator =\r\n      this.state.sortDirection === \"asc\"\r\n        ? this.ascComparator\r\n        : this.descComparator;\r\n    const sortedRows = rows.sort(comparator);\r\n    */\n\n    const {\n      currentSort\n    } = this.state;\n    const {\n      data\n    } = this.state.cryptos; //<FontAwesomeIcon icon={`fas fa-${sortTypes[(this.state.currentSort)].class}`} />\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crypto Currency Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volumn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"MarketCap\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.sortBy('Market_Cao')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.cryptos.sort(sortTypes[this.state.currentSort].fn).map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.Currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.High\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.Low\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.Volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.Market_Cap\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*{headers.map((header, i) => (\r\n                <th\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      // if we clicked on the already selected index, we flip the sort direction\r\n                      sortDirection:\r\n                        this.state.selectedHeaderIndex === i\r\n                          ? this.flipSortDirection()\r\n                          : \"asc\",\r\n                      selectedHeaderIndex: i\r\n                    });\r\n                  }}\r\n                >\r\n                  {header}\r\n                </th>\r\n              ))}*/\n\n/*{sortedRows.map(row => (\r\n                <tr>\r\n                  {row.map(cell => (\r\n                    <td>{cell}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}*/","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Component","axios","COLUMNS","useTable","Cryptotable","FontAwesomeIcon","sortTypes","up","class","fn","a","b","Market_Cap","down","default","CryptoList","constructor","props","onSortChange","currentSort","state","console","log","nextSort","setState","cryptos","cur","test","dat","Date","high","low","vol","mark","sortDirection","selectedHeaderIndex","compareBy","bind","sortBy","componentDidMount","get","then","response","data","Currency","High","Low","Volumn","catch","error","cryptoList","map","currentcrypto","_id","key","arrayCopy","crptos","sort","render","crypto","p","Volume"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {COLUMNS} from './columns';\r\nimport './table.css';\r\nimport {useTable} from 'react-table';\r\nimport Cryptotable from './cryptotable';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nconst sortTypes = {\r\n  up: {\r\n      class: 'sort-up',\r\n      fn: (a, b) => a.Market_Cap - b.Market_Cap\r\n  },\r\n  down: {\r\n      class: 'sort-down',\r\n      fn: (a, b) => b.Market_Cap - a.Market_Cap\r\n  },\r\n  default: {\r\n      class: 'sort',\r\n      fn: (a, b) => a\r\n  }\r\n};\r\n\r\nexport default class CryptoList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cryptos: [],\r\n      cur:[],\r\n      test:[],\r\n      dat: new Date(),\r\n      high:0,\r\n      low:0,\r\n      vol:'',\r\n      mark:'',\r\n      sortDirection:'asc', \r\n      selectedHeaderIndex:0,\r\n      currentSort: 'default'\r\n      \r\n      //setCryptos:[],\r\n      //lastFetchDate:new Date(),\r\n      //setLastFetchDate:new Date(),\r\n      //searchTerm:'', setSearchTerm:''\r\n    };\r\n    this.compareBy.bind(this);\r\n    this.sortBy.bind(this);\r\n    /*\r\n    this.ascComparator = (row1, row2) =>\r\n      row1[this.state.selectedHeaderIndex].localeCompare(\r\n        row2[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.descComparator = (row1, row2) =>\r\n      row2[this.state.selectedHeaderIndex].localeCompare(\r\n        row1[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.flipSortDirection = () =>\r\n      this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n      */\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/crypto/')\r\n    .then(response =>{\r\n      const cryptos = response.data;\r\n        this.setState({ cryptos: cryptos, \r\n          //headers: cryptos[0]\r\n          //test: cryptos.map(name=>name.currency),\r\n        cur:cryptos.Currency,\r\n        dat: new Date(cryptos.Date),\r\n        high:cryptos.High,\r\n        low:cryptos.Low,\r\n        vol:cryptos.Volumn,\r\n        mark:cryptos.Market_Cap,\r\n\r\n      });\r\n        console.log(response.data[0]);\r\n        //return response.data\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n  }\r\n  \r\n  cryptoList(){\r\n    return this.state.cryptos.map(currentcrypto =>{\r\n        return <Cryptotable crypto={currentcrypto} key={currentcrypto._id}/>;\r\n    })\r\n  }\r\n  \r\n  onSortChange = () => {\r\n    const { currentSort } = this.state.currentSort;\r\n    console.log(this.state.currentSort);\r\n    let nextSort;\r\n\r\n    if (currentSort === 'down') nextSort = 'up';\r\n    else if (currentSort === 'up') nextSort = 'default';\r\n    else if (currentSort === 'default') nextSort = 'down';\r\n\r\n    this.setState({\r\n        currentSort: nextSort\r\n    });\r\n  };\r\n\r\n  compareBy(key) {\r\n    return function (a, b) {\r\n      if (a[key] < b[key]) return -1;\r\n      if (a[key] > b[key]) return 1;\r\n      return 0;\r\n    };\r\n  }\r\n \r\n  sortBy(key) {\r\n    let arrayCopy = [...this.state.crptos];\r\n    arrayCopy.sort(this.compareBy(key));\r\n    this.setState({data: arrayCopy});\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state.cryptos[0]);//tezos\r\n    console.log(this.props.crypto); \r\n    console.log(this.state.cryptos);//486 array\r\n    console.log(this.state.currentSort);\r\n    console.log(sortTypes[(this.state.currentSort)].class)\r\n    /*const table = {\r\n      headers:[\"Currency\", \"High\", \"Low\", \"Volumn\", \"Market_Cap\"],\r\n      rows:[[this.state.cryptos.cur], \r\n            [this.state.cryptos.high],\r\n            [this.state.cryptos.low],\r\n            [this.state.cryptos.vol],\r\n            [this.state.cryptos.mark],\r\n            ]\r\n    };\r\n    \r\n    const {headers, rows } = table;\r\n    \r\n    const comparator =\r\n      this.state.sortDirection === \"asc\"\r\n        ? this.ascComparator\r\n        : this.descComparator;\r\n    const sortedRows = rows.sort(comparator);\r\n*/\r\n    const { currentSort } = this.state;\r\n    const {data} =this.state.cryptos;\r\n    //<FontAwesomeIcon icon={`fas fa-${sortTypes[(this.state.currentSort)].class}`} />\r\n\r\n    return(\r\n      <div>\r\n          <h2>Crypto Currency Historial</h2>\r\n          <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  \r\n                  <th>Currency</th>\r\n                  <th>High</th>\r\n                  <th>Low</th>\r\n                  <th>Volumn</th>\r\n                  <th>MarketCap\r\n                    <button onClick={() => this.sortBy('Market_Cao')} >\r\n                    </button>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(this.state.cryptos).sort(sortTypes[(this.state.currentSort)].fn).map(p=>(\r\n                  <tr>\r\n                    <td>{p.Currency}</td>\r\n                    <td>{p.High}</td>\r\n                    <td>{p.Low}</td>\r\n                    <td>{p.Volume}</td>\r\n                    <td>{p.Market_Cap}</td>\r\n                  </tr>\r\n                )\r\n                )}                \r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  )\r\n    }\r\n  }\r\n/*{headers.map((header, i) => (\r\n                <th\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      // if we clicked on the already selected index, we flip the sort direction\r\n                      sortDirection:\r\n                        this.state.selectedHeaderIndex === i\r\n                          ? this.flipSortDirection()\r\n                          : \"asc\",\r\n                      selectedHeaderIndex: i\r\n                    });\r\n                  }}\r\n                >\r\n                  {header}\r\n                </th>\r\n              ))}*/\r\n  /*{sortedRows.map(row => (\r\n                  <tr>\r\n                    {row.map(cell => (\r\n                      <td>{cell}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}*/"]},"metadata":{},"sourceType":"module"}