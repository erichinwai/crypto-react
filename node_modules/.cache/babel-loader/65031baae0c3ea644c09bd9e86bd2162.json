{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\cryptotable.js\";\nimport React, { Component, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './columns';\nimport './table.css';\n\nclass Cryptotable extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.BasicTable = _s(() => {\n      _s();\n\n      const columns = useMemo(() => COLUMNS, []);\n      const data = useMemo(() => this.state.cryptos, []);\n      const tableInstance = useTable({\n        columns,\n        data\n      });\n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n      } = tableInstance;\n      return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    }, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n      return [useTable];\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BasicTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cryptotable;","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/cryptotable.js"],"names":["React","Component","useMemo","useTable","COLUMNS","Cryptotable","BasicTable","columns","data","state","cryptos","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAmC;AAAA;AAAA;;AAAA;AAAA,SAC/BK,UAD+B,MACnB,MAAK;AAAA;;AACb,YAAMC,OAAO,GAAGL,OAAO,CAAC,MAAKE,OAAN,EAAe,EAAf,CAAvB;AACA,YAAMI,IAAI,GAAGN,OAAO,CAAC,MAAK,KAAKO,KAAL,CAAWC,OAAjB,EAA0B,EAA1B,CAApB;AACA,YAAMC,aAAa,GAAGR,QAAQ,CAAC;AAC3BI,QAAAA,OAD2B;AAE3BC,QAAAA;AAF2B,OAAD,CAA9B;AAKA,YAAM;AACFI,QAAAA,aADE;AAEFC,QAAAA,iBAFE;AAGFC,QAAAA,YAHE;AAIFC,QAAAA,IAJE;AAKFC,QAAAA;AALE,UAMFL,aANJ;AAQA,0BACI,sBAAWC,aAAX;AAAA,gCACI;AAAA,oBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,sBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,wBACKD,MAAM,CAACE,MAAP,CAAc,QAAd;AADL;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI,sBAAWV,iBAAX;AAAA,oBACKE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAQ;AACdR,YAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,gCACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,wBACKD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAQ;AACnB,oCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BACFD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AADE;AAAA;AAAA;AAAA;AAAA,wBAAP;AAGH,eAJA;AADL;AAAA;AAAA;AAAA;AAAA,oBADJ;AAUH,WAZA;AADL;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA+BP,KAhDkC;AAAA,cAILpB,QAJK;AAAA;AAAA;;AAiD/BoB,EAAAA,MAAM,GAAE;AACJ,wBAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAIH;;AAtD8B;;AAyDnC,eAAelB,WAAf","sourcesContent":["import React, {Component, useMemo} from 'react';\r\nimport {useTable} from 'react-table'\r\nimport {COLUMNS} from './columns'\r\nimport './table.css'\r\n\r\nclass Cryptotable extends Component{\r\n    BasicTable =() =>{\r\n        const columns = useMemo(()=> COLUMNS, [])\r\n        const data = useMemo(()=> this.state.cryptos, [])\r\n        const tableInstance = useTable({\r\n            columns, \r\n            data\r\n        })\r\n\r\n        const {\r\n            getTableProps, \r\n            getTableBodyProps, \r\n            headerGroups, \r\n            rows, \r\n            prepareRow\r\n        } = tableInstance\r\n\r\n        return(\r\n            <table {...getTableProps}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup)=>(\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column)=>(\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                        ))} \r\n                        </tr>\r\n                    ))}\r\n                    \r\n                </thead>\r\n                <tbody {...getTableBodyProps}>\r\n                    {rows.map((row) =>{\r\n                        prepareRow(row)\r\n                        return(\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell)=>{\r\n                                    return <td {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                })}\r\n                            </tr>\r\n\r\n                        )\r\n                    })} \r\n                </tbody>\r\n            </table>\r\n        )\r\n}\r\n    render(){\r\n        return(\r\n            \r\n            <BasicTable/>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Cryptotable;\r\n"]},"metadata":{},"sourceType":"module"}