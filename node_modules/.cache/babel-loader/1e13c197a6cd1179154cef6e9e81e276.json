{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { useTable } from 'react-table';\nimport Cryptotable from './cryptotable'; //import '../../node_modules/font-awesome/css/font-awesome.min.css'; \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nconst sortTypes = {\n  up: {\n    icon: faSortUp,\n    fn: (a, b) => a.Market_Cap - b.Market_Cap\n  },\n  down: {\n    icon: faSortDown,\n    fn: (a, b) => b.Market_Cap - a.Market_Cap\n  }\n};\nexport default class CryptoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSortChange = () => {\n      const currentSort = this.state.currentSort;\n      console.log(this.state.currentSort);\n      console.log(currentSort);\n      let nextSort;\n      if (currentSort === 'down') nextSort = 'up';else if (currentSort === 'up') nextSort = 'down';\n      console.log(nextSort);\n      this.setState({\n        currentSort: nextSort\n      });\n    };\n\n    this.state = {\n      cryptos: [],\n      sortNameCryptos: [],\n      cur: [],\n      test: [],\n      dat: new Date(),\n      high: 0,\n      low: 0,\n      vol: '',\n      mark: '',\n      sortDirection: 'asc',\n      selectedHeaderIndex: 0,\n      currentSort: 'up' //setCryptos:[],\n      //lastFetchDate:new Date(),\n      //setLastFetchDate:new Date(),\n      //searchTerm:'', setSearchTerm:''\n\n    };\n  }\n  /*removeDuplicates(arr) {\r\n    const map = new Map();\r\n    arr.forEach(v => map.set(v.Currency, v)) \r\n    return [...map.values()];\r\n  }*/\n\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/crypto/').then(response => {\n      const cryptos = response.data;\n      this.setState({\n        cryptos: cryptos,\n        //headers: cryptos[0]\n        //test: cryptos.map(name=>name.currency),\n        cur: cryptos.Currency,\n        dat: new Date(cryptos.Date),\n        high: cryptos.High,\n        low: cryptos.Low,\n        vol: cryptos.Volumn,\n        mark: cryptos.Market_Cap\n      });\n      console.log(response.data[0]);\n    }).then(sortNdata => this.setState({\n      sortNameCryptos: this.removeDuplicates(sortNdata)\n    })).catch(error => {\n      console.log(error);\n    });\n  }\n\n  cryptoList() {\n    return this.state.cryptos.map(currentcrypto => {\n      return /*#__PURE__*/_jsxDEV(Cryptotable, {\n        crypto: currentcrypto\n      }, currentcrypto._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n\n  sortBy(key) {\n    let arrayCopy = [...this.state.cryptos];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({\n      cryptos: arrayCopy\n    });\n  }\n\n  render() {\n    console.log(this.state.cryptos); //tezos\n\n    console.log(this.props.cryptos);\n    console.log(this.state.currentSort);\n    console.log(sortTypes[this.state.currentSort].fn);\n    const data = this.state.cryptos;\n    const currentSort = this.state.currentSort;\n    console.log(data);\n    console.log(currentSort);\n    /*const myData = [].concat(this.state.cryptos)\r\n    .sort((a, b) => a.Market_Cap > b.Market_Cap ? 1 : -1)\r\n    .map((item, i) => \r\n      <tr key={item._id}>\r\n      <td>{item.Currency}</td>\r\n      <td>{item.High}</td>\r\n      <td>{item.Low}</td>\r\n      <td>{item.Volume}</td>\r\n      <td>{item.Market_Cap}</td>\r\n      </tr>\r\n    );*/\n\n    const driver = this.state.cryptos;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crypto Currency Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volumn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"MarketCap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*<th>MarketCap\r\n                <button onClick={this.onSortChange}>\r\n                  <FontAwesomeIcon icon={sortTypes[(currentSort)].icon} />\r\n                </button>*/\n\n/*{[...data].sort(sortTypes[(currentSort)].fn).map(p=>(\r\n                  <tr>\r\n                    <td>{p.Currency}</td>\r\n                    <td>{p.High}</td>\r\n                    <td>{p.Low}</td>\r\n                    <td>{p.Volume}</td>\r\n                    <td>{p.Market_Cap}</td>\r\n                  </tr>\r\n                )\r\n                )}*/","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Component","axios","COLUMNS","useTable","Cryptotable","FontAwesomeIcon","faSort","faSortDown","faSortUp","sortTypes","up","icon","fn","a","b","Market_Cap","down","CryptoList","constructor","props","onSortChange","currentSort","state","console","log","nextSort","setState","cryptos","sortNameCryptos","cur","test","dat","Date","high","low","vol","mark","sortDirection","selectedHeaderIndex","componentDidMount","get","then","response","data","Currency","High","Low","Volumn","sortNdata","removeDuplicates","catch","error","cryptoList","map","currentcrypto","_id","compareBy","key","sortBy","arrayCopy","sort","render","driver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {COLUMNS} from './columns';\r\nimport './table.css';\r\nimport {useTable} from 'react-table';\r\nimport Cryptotable from './cryptotable';\r\n//import '../../node_modules/font-awesome/css/font-awesome.min.css'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst sortTypes = {\r\n  up: {\r\n      icon: faSortUp,\r\n      fn: (a, b) => a.Market_Cap - b.Market_Cap \r\n  },\r\n  down: {\r\n      icon: faSortDown,\r\n      fn: (a, b) => b.Market_Cap - a.Market_Cap \r\n  }\r\n  \r\n};\r\n\r\n\r\nexport default class CryptoList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cryptos: [],\r\n      sortNameCryptos:[],\r\n      cur:[],\r\n      test:[],\r\n      dat: new Date(),\r\n      high:0,\r\n      low:0,\r\n      vol:'',\r\n      mark:'',\r\n      sortDirection:'asc', \r\n      selectedHeaderIndex:0,\r\n      currentSort: 'up',\r\n      \r\n      //setCryptos:[],\r\n      //lastFetchDate:new Date(),\r\n      //setLastFetchDate:new Date(),\r\n      //searchTerm:'', setSearchTerm:''\r\n    };\r\n    \r\n    \r\n  }\r\n  /*removeDuplicates(arr) {\r\n    const map = new Map();\r\n    arr.forEach(v => map.set(v.Currency, v)) \r\n    return [...map.values()];\r\n  }*/\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/crypto/')\r\n    .then(response =>{\r\n      const cryptos = response.data;\r\n        this.setState({ \r\n          cryptos: cryptos, \r\n          //headers: cryptos[0]\r\n          //test: cryptos.map(name=>name.currency),\r\n        cur:cryptos.Currency,\r\n        dat: new Date(cryptos.Date),\r\n        high:cryptos.High,\r\n        low:cryptos.Low,\r\n        vol:cryptos.Volumn,\r\n        mark:cryptos.Market_Cap,\r\n\r\n      });\r\n        console.log(response.data[0]);\r\n    })\r\n    .then(sortNdata=>this.setState({\r\n      sortNameCryptos: this.removeDuplicates(sortNdata)\r\n    }))\r\n    .catch((error)=>{\r\n        console.log(error);\r\n    })\r\n\r\n    \r\n  }\r\n  \r\n  cryptoList(){\r\n    return this.state.cryptos.map(currentcrypto =>{\r\n        return <Cryptotable crypto={currentcrypto} key={currentcrypto._id}/>;\r\n    })\r\n  }\r\n  \r\n  onSortChange = () => {\r\n    const currentSort = this.state.currentSort;\r\n    console.log(this.state.currentSort);\r\n    console.log(currentSort);\r\n    let nextSort;\r\n\r\n    if (currentSort === 'down') nextSort = 'up';\r\n    else if (currentSort === 'up') nextSort = 'down';\r\n    console.log(nextSort);\r\n    this.setState({\r\n        currentSort: nextSort\r\n    });\r\n  };\r\n\r\n  compareBy(key) {\r\n    return function (a, b) {\r\n      if (a[key] < b[key]) return -1;\r\n      if (a[key] > b[key]) return 1;\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  sortBy(key) {\r\n    let arrayCopy = [...this.state.cryptos ];\r\n    arrayCopy.sort(this.compareBy(key));\r\n    this.setState({cryptos: arrayCopy});\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state.cryptos);//tezos\r\n    console.log(this.props.cryptos); \r\n    console.log(this.state.currentSort);\r\n    console.log(sortTypes[(this.state.currentSort)].fn);\r\n    \r\n    const data = this.state.cryptos;\r\n    const currentSort = this.state.currentSort;\r\n    console.log(data);\r\n    console.log(currentSort)\r\n    /*const myData = [].concat(this.state.cryptos)\r\n    .sort((a, b) => a.Market_Cap > b.Market_Cap ? 1 : -1)\r\n    .map((item, i) => \r\n      <tr key={item._id}>\r\n      <td>{item.Currency}</td>\r\n      <td>{item.High}</td>\r\n      <td>{item.Low}</td>\r\n      <td>{item.Volume}</td>\r\n      <td>{item.Market_Cap}</td>\r\n      </tr>\r\n    );*/\r\n    const driver =this.state.cryptos; \r\n    return(\r\n      \r\n      <div>\r\n          <h2>Crypto Currency Historial</h2>\r\n          <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  \r\n                  <th>Currency</th>\r\n                  <th>High</th>\r\n                  <th>Low</th>\r\n                  <th>Volumn</th>\r\n                  <th>MarketCap\r\n                  \r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              \r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  )\r\n    }\r\n  }\r\n  /*<th>MarketCap\r\n                  <button onClick={this.onSortChange}>\r\n                    <FontAwesomeIcon icon={sortTypes[(currentSort)].icon} />\r\n                  </button>*/\r\n/*{[...data].sort(sortTypes[(currentSort)].fn).map(p=>(\r\n                  <tr>\r\n                    <td>{p.Currency}</td>\r\n                    <td>{p.High}</td>\r\n                    <td>{p.Low}</td>\r\n                    <td>{p.Volume}</td>\r\n                    <td>{p.Market_Cap}</td>\r\n                  </tr>\r\n                )\r\n                )}*/"]},"metadata":{},"sourceType":"module"}