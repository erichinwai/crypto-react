{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { useTable } from 'react-table';\nimport Cryptotable from './cryptotable';\nexport default class CryptoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: [],\n      sortDirection: 'asc',\n      selectedHeaderIndex: 0 //setCryptos:[],\n      //lastFetchDate:new Date(),\n      //setLastFetchDate:new Date(),\n      //searchTerm:'', setSearchTerm:''\n\n    };\n\n    this.ascComparator = (row1, row2) => row1[this.state.selectedHeaderIndex].localeCompare(row2[this.state.selectedHeaderIndex]);\n\n    this.descComparator = (row1, row2) => row2[this.state.selectedHeaderIndex].localeCompare(row1[this.state.selectedHeaderIndex]);\n\n    this.flipSortDirection = () => this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/crypto/').then(response => {\n      this.setState({\n        cryptos: response.data\n      });\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  cryptoList() {\n    console.log(this.state.cryptos);\n    console.log(this.props.cryptos);\n    return this.state.cryptos.map(currentcrypto => {\n      return /*#__PURE__*/_jsxDEV(Cryptotable, {\n        crypto: currentcrypto\n      }, currentcrypto._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      headers,\n      rows\n    } = this.state.cryptos;\n    const comparator = this.state.sortDirection === \"asc\" ? this.ascComparator : this.descComparator; // sort the rows based on the selected header\n\n    const sortedRows = rows.sort(comparator);\n    console.log(sortedRows);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crypto Currency Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.cryptoList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Component","axios","COLUMNS","useTable","Cryptotable","CryptoList","constructor","props","state","cryptos","sortDirection","selectedHeaderIndex","ascComparator","row1","row2","localeCompare","descComparator","flipSortDirection","componentDidMount","get","then","response","setState","data","console","log","catch","error","cryptoList","map","currentcrypto","_id","render","headers","rows","comparator","sortedRows","sort"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,aAAa,EAAC,KAFH;AAGXC,MAAAA,mBAAmB,EAAC,CAHT,CAKX;AACA;AACA;AACA;;AARW,KAAb;;AAUA,SAAKC,aAAL,GAAqB,CAACC,IAAD,EAAOC,IAAP,KACnBD,IAAI,CAAC,KAAKL,KAAL,CAAWG,mBAAZ,CAAJ,CAAqCI,aAArC,CACED,IAAI,CAAC,KAAKN,KAAL,CAAWG,mBAAZ,CADN,CADF;;AAKA,SAAKK,cAAL,GAAsB,CAACH,IAAD,EAAOC,IAAP,KACpBA,IAAI,CAAC,KAAKN,KAAL,CAAWG,mBAAZ,CAAJ,CAAqCI,aAArC,CACEF,IAAI,CAAC,KAAKL,KAAL,CAAWG,mBAAZ,CADN,CADF;;AAKA,SAAKM,iBAAL,GAAyB,MACvB,KAAKT,KAAL,CAAWE,aAAX,KAA6B,KAA7B,GAAqC,MAArC,GAA8C,KADhD;AAED;;AAEDQ,EAAAA,iBAAiB,GAAE;AACjBjB,IAAAA,KAAK,CAACkB,GAAN,CAAU,+BAAV,EACCC,IADD,CACMC,QAAQ,IAAG;AACb,WAAKC,QAAL,CAAc;AAAEb,QAAAA,OAAO,EAAEY,QAAQ,CAACE;AAApB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACH,KAJD,EAKCG,KALD,CAKQC,KAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAPD;AAQD;;AAEDC,EAAAA,UAAU,GAAE;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,OAAvB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,OAAvB;AAEA,WAAO,KAAKD,KAAL,CAAWC,OAAX,CAAmBoB,GAAnB,CAAuBC,aAAa,IAAG;AAC1C,0BAAO,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA;AAArB,SAAyCA,aAAa,CAACC,GAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGD;;AAGDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAK1B,KAAL,CAAWC,OAArC;AAEA,UAAM0B,UAAU,GACd,KAAK3B,KAAL,CAAWE,aAAX,KAA6B,KAA7B,GACI,KAAKE,aADT,GAEI,KAAKI,cAHX,CAHM,CAQN;;AACA,UAAMoB,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUF,UAAV,CAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYW,UAAZ;AAGA,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACK,KAAKR,UAAL;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaC;;AA1E4C","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {COLUMNS} from './columns';\r\nimport './table.css';\r\nimport {useTable} from 'react-table';\r\nimport Cryptotable from './cryptotable';\r\nexport default class CryptoList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cryptos: [],\r\n      sortDirection:'asc', \r\n      selectedHeaderIndex:0\r\n      \r\n      //setCryptos:[],\r\n      //lastFetchDate:new Date(),\r\n      //setLastFetchDate:new Date(),\r\n      //searchTerm:'', setSearchTerm:''\r\n    };\r\n    this.ascComparator = (row1, row2) =>\r\n      row1[this.state.selectedHeaderIndex].localeCompare(\r\n        row2[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.descComparator = (row1, row2) =>\r\n      row2[this.state.selectedHeaderIndex].localeCompare(\r\n        row1[this.state.selectedHeaderIndex]\r\n      );\r\n\r\n    this.flipSortDirection = () =>\r\n      this.state.sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/crypto/')\r\n    .then(response =>{\r\n        this.setState({ cryptos: response.data})\r\n        console.log(response.data)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error);\r\n    })\r\n  }\r\n  \r\n  cryptoList(){\r\n    console.log(this.state.cryptos);\r\n    console.log(this.props.cryptos);\r\n\r\n    return this.state.cryptos.map(currentcrypto =>{\r\n        return <Cryptotable crypto={currentcrypto} key={currentcrypto._id}/>;\r\n    })\r\n  }\r\n  \r\n  \r\n  render(){\r\n    const { headers, rows } = this.state.cryptos;\r\n\r\n    const comparator =\r\n      this.state.sortDirection === \"asc\"\r\n        ? this.ascComparator\r\n        : this.descComparator;\r\n\r\n    // sort the rows based on the selected header\r\n    const sortedRows = rows.sort(comparator);\r\n    console.log(sortedRows)\r\n\r\n\r\n    return(\r\n      <div>\r\n          <h2>Crypto Currency Historial</h2>\r\n          <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n              \r\n              </thead>\r\n              <tbody>\r\n                  {this.cryptoList() }\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  )\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}