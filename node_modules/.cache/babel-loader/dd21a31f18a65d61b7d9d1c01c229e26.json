{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hin Wai\\\\my-app\\\\src\\\\components\\\\crypto_list.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './table.css';\nimport { FontAwesomeIcon } from '@fortawesome/fontawesome-free';\n\nclass CryptoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cryptos: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/crypto/').then(response => {\n      this.setState({\n        cryptos: response.data\n      });\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /*cryptoList(){\r\n      return this.state.cryptos.sort(currentSort.fn).map(currentcrypto =>{\r\n          const {Currency, Date, Open, High, Low, Close, Volume } = currentcrypto;\r\n          const marketCap = currentcrypto['Market Cap']\r\n          return(\r\n              <tr key={currentcrypto._id}>\r\n              <td>{Currency}</td>\r\n              <td>{Date}</td>\r\n              <td>{Open}</td>\r\n              <td>{High}</td>\r\n              <td>{Low}</td>\r\n              <td>{Close}</td>\r\n              <td>{Volume}</td>\r\n              <td>{marketCap}</td>\r\n            </tr>\r\n          )\r\n      })\r\n  }*/\n\n\n  render() {\n    const sortTypes = {\n      up: {\n        class: 'sort-up',\n        fn: (a, b) => a.net_worth - b.net_worth\n      },\n      down: {\n        class: 'sort-down',\n        fn: (a, b) => b.net_worth - a.net_worth\n      },\n      default: {\n        class: 'sort',\n        fn: (a, b) => a\n      }\n    };\n    state = {\n      currentSort: 'default'\n    };\n\n    onSortChange = () => {\n      const {\n        currentSort\n      } = this.state;\n      let nextSort;\n      if (currentSort === 'down') nextSort = 'up';else if (currentSort === 'up') nextSort = 'default';else if (currentSort === 'default') nextSort = 'down';\n      this.setState({\n        currentSort: nextSort\n      });\n    };\n\n    const {\n      data\n    } = this.state.cryptos;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crypto Currency Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Market Cap\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.onSortChange,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fas fa-${sortTypes[currentSort].class}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [[...data].sort(sortTypes[currentSort].fn).map(currentcrypto => {\n            /*#__PURE__*/\n            _jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Open\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.High\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Low\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Close\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto.Volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: currentcrypto['Market Cap']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, currentcrypto._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this);\n          }), \"//\", this.cryptoList()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CryptoList;","map":{"version":3,"sources":["C:/Users/Hin Wai/my-app/src/components/crypto_list.component.js"],"names":["React","Component","axios","FontAwesomeIcon","CryptoList","constructor","props","state","cryptos","componentDidMount","get","then","response","setState","data","console","log","catch","error","render","sortTypes","up","class","fn","a","b","net_worth","down","default","currentSort","onSortChange","nextSort","sort","map","currentcrypto","Currency","Date","Open","High","Low","Close","Volume","_id","cryptoList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './table.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/fontawesome-free'\r\n\r\n\r\n\r\nclass CryptoList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {cryptos: []};\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/crypto/')\r\n        .then(response =>{\r\n            this.setState({ cryptos: response.data})\r\n            console.log(response.data)\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    \r\n    /*cryptoList(){\r\n        return this.state.cryptos.sort(currentSort.fn).map(currentcrypto =>{\r\n            const {Currency, Date, Open, High, Low, Close, Volume } = currentcrypto;\r\n            const marketCap = currentcrypto['Market Cap']\r\n            return(\r\n                <tr key={currentcrypto._id}>\r\n                <td>{Currency}</td>\r\n                <td>{Date}</td>\r\n                <td>{Open}</td>\r\n                <td>{High}</td>\r\n                <td>{Low}</td>\r\n                <td>{Close}</td>\r\n                <td>{Volume}</td>\r\n                <td>{marketCap}</td>\r\n\r\n            </tr>\r\n            )\r\n        })\r\n    }*/\r\n    \r\n    render(){\r\n        const sortTypes = {\r\n            up: {\r\n                class: 'sort-up',\r\n                fn: (a, b) => a.net_worth - b.net_worth\r\n            },\r\n            down: {\r\n                class: 'sort-down',\r\n                fn: (a, b) => b.net_worth - a.net_worth\r\n            },\r\n            default: {\r\n                class: 'sort',\r\n                fn: (a, b) => a\r\n            }\r\n        };\r\n        state = {\r\n            currentSort: 'default'\r\n        };\r\n        \r\n        onSortChange = () => {\r\n            const { currentSort } = this.state;\r\n            let nextSort;\r\n    \r\n            if (currentSort === 'down') nextSort = 'up';\r\n            else if (currentSort === 'up') nextSort = 'default';\r\n            else if (currentSort === 'default') nextSort = 'down';\r\n    \r\n            this.setState({\r\n                currentSort: nextSort\r\n            });\r\n        };\r\n        const {data} =this.state.cryptos;\r\n        return(\r\n            <div>\r\n                <h2>Crypto Currency Historial</h2>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Currency</th>\r\n                            <th>Date</th>\r\n                            <th>Open</th>\r\n                            <th>High</th>\r\n                            <th>Low</th>\r\n                            <th>Close</th>\r\n                            <th>Volume</th>\r\n                            <th>\r\n                                Market Cap\r\n                                <button onClick={this.onSortChange}>\r\n                                    <i className={`fas fa-${sortTypes[currentSort].class}`} />\r\n                                </button>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {[...data].sort(sortTypes[currentSort].fn).map(currentcrypto =>{\r\n                            <tr key={currentcrypto._id}>\r\n                                <td>{currentcrypto.Currency}</td>\r\n                                <td>{currentcrypto.Date}</td>\r\n                                <td>{currentcrypto.Open}</td>\r\n                                <td>{currentcrypto.High}</td>\r\n                                <td>{currentcrypto.Low}</td>\r\n                                <td>{currentcrypto.Close}</td>\r\n                                <td>{currentcrypto.Volume}</td>\r\n                                <td>{currentcrypto['Market Cap']}</td>\r\n            \r\n                            </tr>\r\n                        })\r\n                        }\r\n                        //{this.cryptoList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CryptoList;"]},"metadata":{},"sourceType":"module"}